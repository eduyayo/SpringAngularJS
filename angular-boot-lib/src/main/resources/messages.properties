# ==================================================
# GENERIC
# ==================================================
head.title = Spring + Thymeleaf + AngularJS

button.accept = Aceptar
button.cancel = Cancelar
button.close = Cerrar
button.confirm = Confirmar
button.delete = Borrar
button.doc = Doc.
button.edit = Editar
button.filter = Filtrar
button.first = Primera
button.last = Última
button.new = Añadir
button.remove = Eliminar
button.reset = Reset
button.return = Volver
button.save = Guardar
button.search = Consultar
button.search.generic = Búsqueda Genérica
button.send = Enviar
button.view = Ver

message.doc = Documentación Oficial
message.save.correct = Datos guardados correctamente.
message.save.incorrect = No se ha podido guardar la información.
message.remove.correct = Datos borrados correctamente.
message.remove.incorrect = No se han podido borrar los datos.

message.validation.length = El campo no puede exceder de {0} caracteres.
message.validation.required = Campo obligatorio.
message.validation.form = Revise el formulario, contiene errores.

# ==================================================
# Init Page
# ==================================================
init.welcome = Aplicación Spring + AngularJS

init.description.1 = Aplicación realizada con Spring-Boot que consta de las siguientes tecnologías
init.description.1.jpa = Spring Data JPA 
init.description.1.jpa.text = Java Persistence API (JPA), es la API de persistencia desarrollada para la plataforma Java EE. Se trata de un framework del lenguaje de programación Java para manejar datos relacionales en aplicaciones.
init.description.1.rest = Spring Data REST
init.description.1.rest.text = Spring Data REST se integra con Spring MVC. Y permite exportar de forma automática a REST los repositorios de Spring Data. 
init.description.1.hateoas = Spring HATEOAS
init.description.1.hateoas.text = HATEOAS es la abreviación de Hypermedia as the Engine of Application State (hipermedia como motor del estado de la aplicación). Es una restricción de la arquitectura de la aplicación REST que lo distingue de la mayoría de otras arquitecturas. El principio es que un cliente interactúa con una aplicación de red completamente a través de hipermedia proporcionadas dinámicamente por los servidores de aplicaciones. Es como que el cliente REST debe ir navegando por la información y no necesita ningún conocimiento previo acerca de la forma de interactuar con cualquier aplicación o servidor más allá de una comprensión genérica de hipermedia. En otras palabras cuando el servidor nos devuelva la representación de un recurso parte de la información devuelta serán identificadores únicos en forma de hipervínculos a otros recursos asociados.
init.description.1.security = Spring Security
init.description.1.security.text = El módulo de Spring Security (antiguamente Acegi) provee de procesos de seguridad configurables que soportan un rango de estándares, protocolos, herramientas y prácticas para la Autenticación y Autorización de la aplicación.
init.description.1.mvc = Spring MVC
init.description.1.mvc.text = Se trata del framework modelo-vista-controlador que incorpora Spring.
init.description.1.thymeleaf = Spring Thymeleaf
init.description.1.thymeleaf.text = Thymeleaf es una librería Java que implementa un motor de plantillas de XML/XHTML/HTML5 (también extensible a otros formatos) que puede ser utilizado tanto en modo web como en otros entornos no web. Se acopla muy bien para trabajar en la capa vista del MVC de aplicaciones web, pero puede procesar cualquier archivo XML, incluso en entornos desconectados. Proporciona un módulo opcional para la integración con Spring MVC, por lo que se puede utilizar para reemplazar completamente a los archivos JSP en tus aplicaciones construidas con esta tecnología.
init.description.1.junit = JUnit
init.description.1.junit.text = JUnit es un conjunto de clases (framework) que son utilizadas en programación para hacer pruebas unitarias de aplicaciones Java.
init.description.1.angularjs = AngularJS
init.description.1.angularjs.text = AngularJS es un framework de JavaScript de código abierto, mantenido por Google, que se utiliza para crear y mantener aplicaciones web de una sola página. Su objetivo es aumentar las aplicaciones basadas en navegador con capacidad de Modelo Vista Controlador (MVC). La biblioteca lee el HTML que contiene atributos de las etiquetas personalizadas adicionales, entonces obedece a las directivas de los atributos personalizados, y une las piezas de entrada o salida de la página a un modelo representado por las variables estándar de JavaScript. Los valores de las variables de JavaScript se pueden configurar manualmente, o recuperados de los recursos JSON estáticos o dinámicos.
init.description.1.bootstrap = Bootstrap
init.description.1.bootstrap.text = Bootstrap es un framework CSS desarrollado inicialmente (en el año 2011) por Twitter que permite dar forma a un sitio web mediante librerías CSS que incluyen tipografías, botones, cuadros, menús y otros elementos que pueden ser utilizados en cualquier sitio web.

init.description.2 = Se utilizan Base de datos y servidor embebidos
init.description.2.h2 = H2
init.description.2.h2.text = Se trata de un motor de base de datos Open Source. Al funcionar en memoria e ir embebida es rápida, ocupa poco espacio, tiene una alta capacidad de integración,.. son características que le hacen ser una buena opción para entornos de desarrollo (en producción no es recomendable).
init.description.2.tomcat = Tomcat
init.description.2.tomcat.text = Apache Tomcat funciona como un contenedor de servlets desarrollado bajo el proyecto Jakarta en la Apache Software Foundation. Tomcat implementa las especificaciones de los servlets y de JavaServer Pages (JSP). Va embebido dentro de Spring Boot.

init.description.3 = Para la creación de informes se utiliza
init.description.3.jasper = JasperReports
init.description.3.jasper.text = JasperReports es una biblioteca de creación de informes que tiene la habilidad de entregar contenido enriquecido al monitor, a la impresora o a ficheros PDF, HTML, XLS, CSV y XML. JasperReports se usa comúnmente con iReport, un front-end gráfico de código abierto para la edición de informes, si bien a partir de la versión 5.5.0 iReport ha sido sustituido por Jaspersoft Studio, un front-end gráfico de código abierto basado en Eclipse.

init.description.4 = Para la gestión de dependencias se utilizan:
init.description.4.maven = Maven
init.description.4.maven.text = Maven es una herramienta de software para la gestión y construcción de proyectos Java. Maven utiliza un Project Object Model (POM) para describir el proyecto de software a construir, sus dependencias de otros módulos y componentes externos, y el orden de construcción de los elementos. Viene con objetivos predefinidos para realizar ciertas tareas claramente definidas, como la compilación del código y su empaquetado.
init.description.4.bower = Bower
init.description.4.bower.text = Bower es un gestor de paquetes para el front-end. 



# ==================================================
# Login Page
# ==================================================
login.text = Login aplicación
login.userName = Nombre usuario
login.password = Contraseña
login.userName.enter = Introduzca nombre de usuario
login.password.enter = Introduzca contraseña

login.message.data.test = Datos para pruebas
login.data.user.test = prueba
login.data.password.test = prueba

login.error.invalid.login = Datos incorrectos.
login.error.logout = Ha cerrado la sesión.



# ==================================================
# City Pages
# ==================================================
city.gestion = Gestión de ciudades

city.view = Ver ciudad
city.edit = Editar ciudad
city.remove = Eliminar ciudad

city.question.remove = Se va a eliminar la ciudad seleccionada.


city.detail.title = Detalle Ciudad
city.detail.bar.principal = Datos Principales
city.detail.bar.situation = Situación

city.field.name = Nombre
city.field.country = País
city.field.state = Estado
city.field.map = Coordenadas




					